{"version":3,"sources":["components/Pricing.js","App.js","serviceWorker.js","index.js"],"names":["tiers","title","price","description","buttonText","buttonVariant","subheader","footers","withStyles","theme","@global","body","backgroundColor","palette","common","white","appBar","position","toolbarTitle","flex","layout","Object","defineProperty","width","marginLeft","spacing","unit","marginRight","breakpoints","up","heroContent","maxWidth","margin","padding","concat","cardHeader","grey","cardPricing","display","justifyContent","alignItems","marginBottom","cardActions","paddingBottom","footer","marginTop","borderTop","divider","props","classes","react_default","a","createElement","Fragment","CssBaseline_default","AppBar_default","color","className","Toolbar_default","Typography_default","variant","noWrap","Button_default","component","align","gutterBottom","Grid_default","container","map","tier","item","key","xs","sm","md","Card_default","CardHeader_default","titleTypographyProps","subheaderTypographyProps","action","StarBorder_default","CardContent_default","line","CardActions_default","fullWidth","classNames","justify","App","components_Pricing","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c30b484.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport StarIcon from \"@material-ui/icons/StarBorder\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  \"@global\": {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white\r\n    }\r\n  },\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  toolbarTitle: {\r\n    flex: 1\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(900 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 900,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\"\r\n    }\r\n  },\r\n  heroContent: {\r\n    maxWidth: 600,\r\n    margin: \"0 auto\",\r\n    padding: `${theme.spacing.unit * 8}px 0 ${theme.spacing.unit * 6}px`\r\n  },\r\n  cardHeader: {\r\n    backgroundColor: theme.palette.grey[200]\r\n  },\r\n  cardPricing: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"baseline\",\r\n    marginBottom: theme.spacing.unit * 2\r\n  },\r\n  cardActions: {\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      paddingBottom: theme.spacing.unit * 2\r\n    }\r\n  },\r\n  footer: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    padding: `${theme.spacing.unit * 6}px 0`\r\n  }\r\n});\r\n\r\nconst tiers = [\r\n  {\r\n    title: \"Free\",\r\n    price: \"0\",\r\n    description: [\r\n      \"10 users included\",\r\n      \"2 GB of storage\",\r\n      \"Help center access\",\r\n      \"Email support\"\r\n    ],\r\n    buttonText: \"Sign up for free\",\r\n    buttonVariant: \"outlined\"\r\n  },\r\n  {\r\n    title: \"Pro\",\r\n    subheader: \"Most popular\",\r\n    price: \"15\",\r\n    description: [\r\n      \"20 users included\",\r\n      \"10 GB of storage\",\r\n      \"Help center access\",\r\n      \"Priority email support\"\r\n    ],\r\n    buttonText: \"Get started\",\r\n    buttonVariant: \"contained\"\r\n  },\r\n  {\r\n    title: \"Enterprise\",\r\n    price: \"30\",\r\n    description: [\r\n      \"50 users included\",\r\n      \"30 GB of storage\",\r\n      \"Help center access\",\r\n      \"Phone & email support\"\r\n    ],\r\n    buttonText: \"Contact us\",\r\n    buttonVariant: \"outlined\"\r\n  }\r\n];\r\nconst footers = [\r\n  {\r\n    title: \"Company\",\r\n    description: [\"Team\", \"History\", \"Contact us\", \"Locations\"]\r\n  },\r\n  {\r\n    title: \"Features\",\r\n    description: [\r\n      \"Cool stuff\",\r\n      \"Random feature\",\r\n      \"Team feature\",\r\n      \"Developer stuff\",\r\n      \"Another one\"\r\n    ]\r\n  },\r\n  {\r\n    title: \"Resources\",\r\n    description: [\r\n      \"Resource\",\r\n      \"Resource name\",\r\n      \"Another resource\",\r\n      \"Final resource\"\r\n    ]\r\n  },\r\n  {\r\n    title: \"Legal\",\r\n    description: [\"Privacy policy\", \"Terms of use\"]\r\n  }\r\n];\r\n\r\nfunction Pricing(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.toolbarTitle}\r\n          >\r\n            Company name\r\n          </Typography>\r\n          <Button>Features</Button>\r\n          <Button>Enterprise</Button>\r\n          <Button>Support</Button>\r\n          <Button color=\"primary\" variant=\"outlined\">\r\n            Login\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main className={classes.layout}>\r\n        {/* Hero unit */}\r\n        <div className={classes.heroContent}>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n          >\r\n            Pricing\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h6\"\r\n            align=\"center\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n          >\r\n            Quickly build an effective pricing table for your potential\r\n            customers with this layout. It&apos;s built with default Material-UI\r\n            components with little customization.\r\n          </Typography>\r\n        </div>\r\n        {/* End hero unit */}\r\n        <Grid container spacing={40} alignItems=\"flex-end\">\r\n          {tiers.map(tier => (\r\n            // Enterprise card is full width at sm breakpoint\r\n            <Grid\r\n              item\r\n              key={tier.title}\r\n              xs={12}\r\n              sm={tier.title === \"Enterprise\" ? 12 : 6}\r\n              md={4}\r\n            >\r\n              <Card>\r\n                <CardHeader\r\n                  title={tier.title}\r\n                  subheader={tier.subheader}\r\n                  titleTypographyProps={{ align: \"center\" }}\r\n                  subheaderTypographyProps={{ align: \"center\" }}\r\n                  action={tier.title === \"Pro\" ? <StarIcon /> : null}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  <div className={classes.cardPricing}>\r\n                    <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\r\n                      ${tier.price}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"textSecondary\">\r\n                      /mo\r\n                    </Typography>\r\n                  </div>\r\n                  {tier.description.map(line => (\r\n                    <Typography variant=\"subtitle1\" align=\"center\" key={line}>\r\n                      {line}\r\n                    </Typography>\r\n                  ))}\r\n                </CardContent>\r\n                <CardActions className={classes.cardActions}>\r\n                  <Button\r\n                    fullWidth\r\n                    variant={tier.buttonVariant}\r\n                    color=\"primary\"\r\n                  >\r\n                    {tier.buttonText}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </main>\r\n      {/* Footer */}\r\n      <footer className={classNames(classes.footer, classes.layout)}>\r\n        <Grid container spacing={32} justify=\"space-evenly\">\r\n          {footers.map(footer => (\r\n            <Grid item xs key={footer.title}>\r\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                {footer.title}\r\n              </Typography>\r\n              {footer.description.map(item => (\r\n                <Typography\r\n                  key={item}\r\n                  variant=\"subtitle1\"\r\n                  color=\"textSecondary\"\r\n                >\r\n                  {item}\r\n                </Typography>\r\n              ))}\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </footer>\r\n      {/* End footer */}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nPricing.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Pricing);\r\n","import React from \"react\";\r\nimport Pricing from \"./components/Pricing.js\"\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Pricing />\r\n    )\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}